{% extends 'base.html.twig' %}

{% block title %}Lista Comenzi{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <style>
        .bg-light-green {
            background-color: rgba(0, 255, 0, 0.1);
        }
    </style>
{% endblock %}
{% block body %}
    <h1>Lista Comenzi</h1>

    {# Mesaje flash #}
    {% for message in app.flashes('success') %}
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}

    <form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="search" class="form-control" placeholder="Caută după mașină, șofer, locație..." value="{{ search ?? '' }}">
        <input type="text" name="start_date" class="form-control datepicker" placeholder="Data start" value="{{ start_date ?? '' }}">
        <select name="sort_by" class="form-select">
            <option value="" {% if sort_by is null %}selected{% endif %}>-</option>
            <option value="profit_desc" {% if sort_by == 'profit_desc' %}selected{% endif %}>Profit Descrescător</option>
            <option value="profit_asc" {% if sort_by == 'profit_asc' %}selected{% endif %}>Profit Crescător</option>
            <option value="consum_desc" {% if sort_by == 'consum_desc' %}selected{% endif %}>Consum Descrescător</option>
            <option value="consum_asc" {% if sort_by == 'consum_asc' %}selected{% endif %}>Consum Crescător</option>
            <option value="pret_km_desc" {% if sort_by == 'pret_km_desc' %}selected{% endif %}>Preț per km Descrescător</option>
            <option value="pret_km_asc" {% if sort_by == 'pret_km_asc' %}selected{% endif %}>Preț per km Crescător</option>
        </select>
        <select name="rezolvat" class="form-select">
            <option value="" {% if rezolvat is null %}selected{% endif %}>Toate (Rezolvat)</option>
            <option value="1" {% if rezolvat == '1' %}selected{% endif %}>Rezolvate</option>
            <option value="0" {% if rezolvat == '0' %}selected{% endif %}>Nerezolvate</option>
        </select>
        <select name="decont" class="form-select">
            <option value="" {% if decont is null %}selected{% endif %}>Toate (Decont)</option>
            <option value="1" {% if decont == '1' %}selected{% endif %}>Decontate</option>
            <option value="0" {% if decont == '0' %}selected{% endif %}>Nedecontate</option>
        </select>
        <select name="calculata" class="form-select">
            <option value="" {% if calculata is null %}selected{% endif %}>Toate (Calculată)</option>
            <option value="1" {% if calculata == '1' %}selected{% endif %}>Calculate</option>
            <option value="0" {% if calculata == '0' %}selected{% endif %}>Necalculate</option>
        </select>
        <button type="submit" class="btn btn-primary">Caută</button>
        <a href="{{ path('app_comenzi_index') }}" class="btn btn-secondary">Resetează</a>
    </div>
</form>

    <a href="{{ path('app_comenzi_new') }}" class="btn btn-primary mb-3">Adaugă Comandă</a>

    {# Tabelul cu comenzi #}
    <table class="table table-striped table-hover rounded-3">
        <thead class="table-dark">
            <tr>
                <th>Calculată</th>
                <th>Mașină</th>
                <th>Șofer</th>
                <th>Data Start</th>
                <th>Data Stop</th>
                <th>Locație</th>
                <th>Liber</th>
                <th>Nr. Km</th>
                <th>Consum (l/100km)</th>
                <th>Profit</th>
                <th>Rezolvat</th>
                <th>Decont</th>
                <th>Acțiuni</th>
            </tr>
        </thead>
        <tbody>
            {% for comanda in pagination %}
                <tr class="{% if comanda.calculata %}bg-light-green{% endif %}">
                    <td>
                        <input type="checkbox" class="calculata-checkbox" data-id="{{ comanda.id }}" {% if comanda.calculata %}checked{% endif %}>
                    </td>
                    <td>
                        <a href="{{ path('app_comenzi_show', {'id': comanda.id}) }}" class="text-decoration-none">
                            {{ comanda.parcAutoNrSnapshot ?: comanda.nrAccidentAuto ?: '-' }}
                        </a>
                    </td>
                    <td>{{ comanda.sofer ?: '-' }}</td>
                    <td>{{ comanda.dataStart ? comanda.dataStart|date('d/m/Y') : '-' }}</td>
                    <td>{{ comanda.dataStop ? comanda.dataStop|date('d/m/Y') : '-' }}</td>
                    <td>
                        {% set ultimaRutaDescarcare = null %}
                        {% if comanda.retururis|length > 0 %}
                            {% set ultimulRetur = comanda.retururis|last %}
                            {% set ultimaRutaDescarcare = ultimulRetur.rutaDescarcare %}
                        {% elseif comanda.tururis|length > 0 %}
                            {% set ultimulTur = comanda.tururis|last %}
                            {% set ultimaRutaDescarcare = ultimulTur.rutaDescarcare %}
                        {% endif %}
                        {{ ultimaRutaDescarcare ?: '-' }}
                    </td>
                    <td>
                        {% set ultimulLiber = null %}
                        {% if comanda.retururis|length > 0 %}
                            {% set ultimulRetur = comanda.retururis|last %}
                            {% set ultimulLiber = ultimulRetur.liber %}
                        {% elseif comanda.tururis|length > 0 %}
                            {% set ultimulTur = comanda.tururis|last %}
                            {% set ultimulLiber = ultimulTur.liber %}
                        {% endif %}
                        {{ ultimulLiber ?: '-' }}
                    </td>
                    <td>{{ comanda.numarKm is not null ? comanda.numarKm : '-' }}</td>
                    <td>
                        {% set totalLitriMotorina = 0 %}
                        {% for cheltuiala in comanda.cheltuielis %}
                            {% set categorieNume = cheltuiala.categorie ? cheltuiala.categorie.nume|lower : '' %}
                            {% set subcategorieNume = cheltuiala.subcategorie ? cheltuiala.subcategorie.nume|lower : '' %}
                            {% if 'motorina' in categorieNume or 'motorina' in subcategorieNume %}
                                {% set totalLitriMotorina = totalLitriMotorina + (cheltuiala.litriMotorina ?: 0) %}
                            {% endif %}
                        {% endfor %}
                        {% if comanda.numarKm is not null and comanda.numarKm > 0 and totalLitriMotorina > 0 %}
                            {% set consumPer100Km = (totalLitriMotorina / comanda.numarKm * 100)|round(1) %}
                            {{ consumPer100Km|number_format(1, ',', '.') }}
                        {% else %}
                            -
                        {% endif %}
                    </td>
                    <td>{{ comanda.profit is not null ? comanda.profit|round : '-' }}</td>
                    <td>
                        <input type="checkbox" class="rezolvat-checkbox" data-id="{{ comanda.id }}" {% if comanda.rezolvat %}checked{% endif %}>
                    </td>
                    <td>
                        <input type="checkbox" class="decont-checkbox" data-id="{{ comanda.id }}" {% if comanda.decont %}checked{% endif %}>
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton-{{ comanda.id }}" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-three-dots-vertical"></i>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-{{ comanda.id }}">
                                <li><a class="dropdown-item text-warning" href="{{ path('app_comenzi_edit', {'id': comanda.id}) }}">Editează</a></li>
                                <li>
                                    <form method="post" action="{{ path('app_comenzi_delete', {'id': comanda.id}) }}" onsubmit="return confirm('Ești sigur că vrei să ștergi această comandă?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comanda.id) }}">
                                        <button type="submit" class="dropdown-item text-danger">Șterge</button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {# Paginare #}
    <div class="navigation mt-3 d-flex justify-content-center">
        {{ knp_pagination_render(pagination) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let processedRezolvat = false;
            let processedDecont = false;
            let processedCalculata = false;

            // Funcționalitate pentru Rezolvat
            document.querySelectorAll('.rezolvat-checkbox').forEach(function(checkbox) {
                checkbox.addEventListener('change', function(e) {
                    if (processedRezolvat) return;
                    processedRezolvat = true;

                    var id = this.getAttribute('data-id');
                    var rezolvat = this.checked;
                    var url = '{{ path('app_comenzi_update_rezolvat', {'id': 'ID'}) }}'.replace('ID', id);

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        body: 'rezolvat=' + encodeURIComponent(rezolvat)
                    })
                    .then(response => {
                        if (!response.ok) throw new Error('Eroare server');
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            console.log('Stare Rezolvat actualizată');
                        } else {
                            alert('Eroare: ' + (data.error || 'Răspuns neașteptat'));
                        }
                    })
                    .catch(error => {
                        console.error('Eroare:', error);
                        alert('Eroare la actualizare Rezolvat');
                    })
                    .finally(() => {
                        processedRezolvat = false;
                    });
                });
            });

            // Funcționalitate pentru Decont
            document.querySelectorAll('.decont-checkbox').forEach(function(checkbox) {
                checkbox.addEventListener('change', function(e) {
                    if (processedDecont) return;
                    processedDecont = true;

                    var id = this.getAttribute('data-id');
                    var decont = this.checked;
                    var url = '{{ path('app_comenzi_update_decont', {'id': 'ID'}) }}'.replace('ID', id);

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        body: 'decont=' + encodeURIComponent(decont)
                    })
                    .then(response => {
                        if (!response.ok) throw new Error('Eroare server');
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            console.log('Stare Decont actualizată');
                        } else {
                            alert('Eroare: ' + (data.error || 'Răspuns neașteptat'));
                        }
                    })
                    .catch(error => {
                        console.error('Eroare:', error);
                        alert('Eroare la actualizare Decont');
                    })
                    .finally(() => {
                        processedDecont = false;
                    });
                });
            });

            // Funcționalitate pentru Calculată
            document.querySelectorAll('.calculata-checkbox').forEach(function(checkbox) {
                checkbox.addEventListener('change', function(e) {
                    if (processedCalculata) return;
                    processedCalculata = true;

                    var id = this.getAttribute('data-id');
                    var calculata = this.checked;
                    var url = '{{ path('app_comenzi_update_calculata', {'id': 'ID'}) }}'.replace('ID', id);

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        body: 'calculata=' + encodeURIComponent(calculata)
                    })
                    .then(response => {
                        if (!response.ok) throw new Error('Eroare server');
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            console.log('Stare Calculată actualizată');
                            var row = checkbox.closest('tr');
                            if (calculata) {
                                row.classList.add('bg-light-green');
                            } else {
                                row.classList.remove('bg-light-green');
                            }
                        } else {
                            alert('Eroare: ' + (data.error || 'Răspuns neașteptat'));
                        }
                    })
                    .catch(error => {
                        console.error('Eroare:', error);
                        alert('Eroare la actualizare Calculată');
                    })
                    .finally(() => {
                        processedCalculata = false;
                    });
                });
            });
        });
    </script>
{% endblock %}