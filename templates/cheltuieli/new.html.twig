{% extends 'base.html.twig' %}

{% block title %}Adaugă Cheltuială{% endblock %}

{% block body %}
    <div class="form-container shadow-sm rounded-3 bg-white p-4" style="max-width: 600px; margin: 0 auto;">
        <h1 class="text-center mb-4">Adaugă o cheltuială nouă</h1>
        {{ form_start(form) }}
            <div class="row g-3 align-items-center">
                <div class="col-md-6">
                    {{ form_label(form.categorie, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.categorie, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    <label for="cheltuieli_subcategorie_select" class="form-label">Subcategorie</label>
                    {{ form_widget(form.subcategorie, {'attr': {'class': 'form-control', 'style': 'display: none;'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.pret_unitate, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.pret_unitate, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.suma, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.suma, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.litri_motorina, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.litri_motorina, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.tva, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.tva, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.comision_tva, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.comision_tva, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.data_cheltuiala, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.data_cheltuiala, {'attr': {'class': 'form-control datepicker'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.descriere, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.descriere, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="col-md-6">
                    {{ form_label(form.moneda, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.moneda, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>
            <div class="button-group mt-4 d-flex justify-content-between">
                <a href="{{ path('app_cheltuieli_list') }}" class="btn btn-secondary">Înapoi la listă</a>
                <button type="submit" class="btn btn-primary">Salvează</button>
            </div>
        {{ form_end(form) }}
    </div>

    <style>
        /* Asigurăm o înălțime uniformă pentru toate câmpurile */
        .form-control {
            height: 38px; /* Înălțime uniformă pentru input și select */
        }

        /* Ajustăm alinierea etichetelor și câmpurilor */
        .form-label {
            margin-bottom: 0.25rem; /* Spațiu consistent sub etichete */
        }

        /* Ajustăm alinierea verticală în grid */
        .align-items-center {
            align-items: center; /* Aliniem elementele pe verticală */
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const categorieField = document.querySelector('[name="cheltuieli[categorie]"]');
            const subcategorieField = document.querySelector('[name="cheltuieli[subcategorie]"]');
            const sumaField = document.querySelector('[name="cheltuieli[suma]"]');
            const litriField = document.querySelector('[name="cheltuieli[litri_motorina]"]');
            const pretUnitateField = document.querySelector('[name="cheltuieli[pret_unitate]"]');
            const monedaField = document.querySelector('[name="cheltuieli[moneda]"]');
            let cursEurRon = 0;

            // Ascundem inițial câmpurile care nu sunt necesare
            if (litriField) {
                litriField.closest('.form-group, .form-row, div').style.display = 'none';
            }
            if (pretUnitateField) {
                pretUnitateField.closest('.form-group, .form-row, div').style.display = 'none';
            }

            let subcategorieSelect = null;

            // Preluăm cursul valutar din API
            fetch('/api/curs-valutar', {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                cursEurRon = data.conversion_rates.RON;
                recalcSuma(); // Recalculăm suma după ce avem cursul
            })
            .catch(error => {
                console.error('Eroare la preluarea cursului valutar:', error);
                cursEurRon = 5; // Valoare fallback în caz de eroare
                recalcSuma();
            });

            // Filtrăm categoriile "Per cursa" și "Consumabile" din dropdown
            function filterCategorii() {
                for (let i = 0; i < categorieField.options.length; i++) {
                    if (categorieField.options[i].text === 'Per cursa' || categorieField.options[i].text === 'Consumabile') {
                        categorieField.remove(i);
                        i--; // Decrementăm i pentru a verifica următoarea opțiune după ștergere
                    }
                }
            }

            // Funcție pentru recalcularea sumei
            function recalcSuma() {
                const pretUnitate = parseFloat(pretUnitateField.value) || 0;
                const litri = parseFloat(litriField.value) || 0;
                let suma = 0;
                if (litriField && litriField.closest('.form-group, .form-row, div').style.display !== 'none') {
                    suma = pretUnitate * litri;
                } else {
                    suma = pretUnitate;
                }
                // Aplicăm cursul valutar dacă moneda este EUR
                if (monedaField.value === 'EUR') {
                    suma = suma * cursEurRon;
                }
                sumaField.value = suma.toFixed(2);
            }

            // Funcție apelată la schimbarea subcategoriei
            function onSubcategorieChange() {
                if (!subcategorieSelect) return;
                const selectedOption = subcategorieSelect.options[subcategorieSelect.selectedIndex];
                if (!selectedOption) return;

                const pretStandard = parseFloat(selectedOption.getAttribute('data-pret-standard') || '0');
                const pretPerL = parseFloat(selectedOption.getAttribute('data-pret-per-l') || '0');

                subcategorieField.value = subcategorieSelect.value;

                // Afișăm câmpul „Preț unitate” și setăm valoarea implicită
                pretUnitateField.closest('.form-group, .form-row, div').style.display = '';
                if (pretPerL > 0) {
                    pretUnitateField.value = pretPerL.toFixed(2);
                    if (litriField) {
                        litriField.closest('.form-group, .form-row, div').style.display = '';
                        recalcSuma();
                    }
                } else if (pretStandard > 0) {
                    pretUnitateField.value = pretStandard.toFixed(2);
                    if (litriField) {
                        litriField.closest('.form-group, .form-row, div').style.display = 'none';
                        litriField.value = '';
                    }
                    recalcSuma();
                } else {
                    pretUnitateField.value = '';
                    if (litriField) {
                        litriField.closest('.form-group, .form-row, div').style.display = 'none';
                        litriField.value = '';
                    }
                    sumaField.value = '';
                }
            }

            // Încărcarea subcategoriilor via AJAX
            function updateSubcategories() {
                const categorieId = categorieField.value;
                if (!categorieId) {
                    subcategorieSelect.innerHTML = '<option value="">Selectează o subcategorie</option>';
                    subcategorieField.value = '';
                    sumaField.value = '';
                    pretUnitateField.value = '';
                    pretUnitateField.closest('.form-group, .form-row, div').style.display = 'none';
                    return;
                }

                fetch(`/comenzi/get-subcategories?categorie=${categorieId}`, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    subcategorieSelect.innerHTML = '<option value="">Selectează o subcategorie</option>';
                    data.forEach(sub => {
                        const option = document.createElement('option');
                        option.value = sub.id;
                        option.text = sub.nume;
                        option.setAttribute('data-pret-standard', sub.pret_standard || '0');
                        option.setAttribute('data-pret-per-l', sub.pret_per_l || '0');
                        subcategorieSelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Eroare la încărcarea subcategoriilor:', error));
            }

            // Inițializare
            if (categorieField && subcategorieField && sumaField && pretUnitateField) {
                subcategorieSelect = document.createElement('select');
                subcategorieSelect.name = 'cheltuieli[subcategorie_select]';
                subcategorieSelect.classList.add('form-control'); // Adăugăm clasa form-control
                subcategorieSelect.innerHTML = '<option value="">Selectează o subcategorie (opțional)</option>';
                subcategorieField.parentNode.insertBefore(subcategorieSelect, subcategorieField);

                // Aplicăm filtrarea categoriilor la inițializare
                filterCategorii();

                categorieField.addEventListener('change', updateSubcategories);
                subcategorieSelect.addEventListener('change', onSubcategorieChange);

                if (litriField) {
                    litriField.addEventListener('input', recalcSuma);
                }
                pretUnitateField.addEventListener('input', recalcSuma);
                monedaField.addEventListener('change', recalcSuma);

                updateSubcategories();
            }
        });
    </script>
{% endblock %}